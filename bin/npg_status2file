#!/usr/bin/env perl

use strict;
use warnings;
use FindBin qw($Bin);
use lib ( -d "$Bin/../lib/perl5" ? "$Bin/../lib/perl5" : "$Bin/../lib" );
use Carp;
use Getopt::Long;
use Pod::Usage;

use npg_tracking::status;

our $VERSION = '0';

my $dir_out;
my $id_run;
my @lanes = ();
my $status;
GetOptions('dir_out=s' => \$dir_out,
           'id_run=i'  => \$id_run,
           'status=s'  => \$status,
           'lanes=i@'  => \@lanes,
          ) || pod2usage(2);

if (!$dir_out) {
  croak '--dir_out option should be set';
}
if ( !(-d $dir_out && -w $dir_out) ) {
  croak "--dir_out option $dir_out should be a writable directory";
}

#####
# Ensure no two statuses of the same run/lane have the same
# timestamp so that the iscurrent db flag could be assigned
# inambigiously. 
sleep 2;

my $path = npg_tracking::status->new(
   id_run => $id_run, status => $status, lanes => \@lanes)->to_file($dir_out);

warn "Wrote status '$status' to $path\n";

0;

__END__

=head1 NAME

npg_status2file

=head1 USAGE

  #save status for two lanes
  npg_status2file --id_run 1234 --lanes 1 --lanes 2  --dir_out my_dir --status 'qc review pending'

  #save status for one lane
  npg_status2file --id_run 1234 --lanes 1 --dir_out my_dir --status 'analysis in progress'

  #save status for a run
  npg_status2file --id_run 1234 --dir_out my_dir --status 'analysis pending'

=head1 REQUIRED ARGUMENTS

 id_run
 status
 dir_out

=head1 OPTIONS

 If --lanes exist then one lane status json file is created to cover all lanes.

=head1 EXIT STATUS

 0

=head1 CONFIGURATION

=head1 DESCRIPTION

 Given run identifier, an optional array of lanes, the status description
 and output directory, creates a json file recording the input plus a timestamp.

=head1 DIAGNOSTICS

=head1 CONFIGURATION AND ENVIRONMENT

=head1 DEPENDENCIES

=over

=item strict

=item warnings

=item Carp

=item Getopt::Long

=item npg_pipeline::status

=item FindBin

=item lib

=item Pod::Usage

=back

=head1 INCOMPATIBILITIES

=head1 BUGS AND LIMITATIONS

=head1 AUTHOR

Kate Taylor

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2014 Genome Research Limited

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=cut
